work/task queue management

   The overall claims system is made up of a series of process flows. These flows cover various claims components such as FNOL, Non-Fault Claims and Bodily Injury. 
These process flows are made up of tasks. Specific tasks will be carried out by teams best suited for that task.



what is a task ?

   As process flows are traversed, various tasks/jobs will be needed to be completed in order to fulfil the various stages of the claims process. These tasks range from handle accidental damage for a non-fault claim to managing a bodily-injury claim.

   At the point where enough data has been captured and a decision has been made, a job may be created and placed on the queue of a team suited to service that particular type of task.

   Currently, jobs are submitted to team-queues as a 'data-set' (containing info such as claim-info, TP details, etc).

   Moving forward, we may redefine what a job may take to allow a generic transport of the form of an object encapsulating the data needed to fulfil a specific atomic piece of work.

   This job will then be submitted to the appropriate queue where it can then be allocated to a suitable agent to progress. 

   The agent may then fully or partially complete the task, after which they can update the claim record in the DB and/or inform the decision engine (if required, it maybe a leaf node, so no further action is required) that the job has been addressed.



what is a team/queue ? 

   in this context a team queue represents the current work backlog of a particular team (or sub-team).

   Jobs will appear on a team's queue and will be allocated to individual agents as the team manager requires. 

   Going forward, we may use AI/ML to decide whether to 'favour' certain agents (based on previous transactions with this claim or certain expertise to influence how a job is distributed, and help provide the customer with the best possible continuity of service.

   If the job can only be partially-completed, then the job may return to the team's queue for future interaction, or may be returned to the decision engine for further analysis




what tech solution aids a task queue implementation ?

   A queueing framework fits well with work allocation scenarios. This section describes some of the possible approaches we may take to help deliver work management.


   cloud agnostic - 
  
      kafka - 
      rabbitMQ
      CloudEvents 
   

   AWS - kinesis
         datastreams firehose
         SQS

   gcp : cloud tasks (cloud.google.com/tasks)
         pub/sub

   aws : Amazon SQS

   azure : EventHub, Eventgrid, Service Bus



work/team management : 

Each of the various cloud solutions has their own view of how users/groups should be managed. 

AWS
---
   IAM (Identity & Access Mgmt) 
       Within AWS you can use IAM to create users.
       IAM is used to assign individual security credentials (keys/passwords/MFA)
       Temporary creds can be assigned to a user to allow access to AWS services & resources
       Manage a user's permissions to control the operations
       Can create roles to control which operations can be performed by the entity that assumes the role
          - CLAIMS: can create a role for a standard agent in a particular team, then each agent can have a user associated with role
                    roles can vary between teams based on what they need to do
       Can also control what entity can assume the role
          - CLAIMS - allows a team to lock down its roles to the entities its managing
       Groups - 
          - Collection of Users assigned to group(s), makes it easier to manage permissions for members of a team.
       Creating a user : Create User - Assign User security creds - assign user to group(s) - give user a login profile (optional)
       Control access to devices ??? TBD
       AD integration : Federation AWS with AD (https://aws.amazon.com/blogs/security/aws-federated-authentication-with-active-directory-federation-services-ad-fs/)
          
Azure
-----
   Azure AD (Active Directory)
       Extends your on-prem AD to the cloud and provides SSO to SaaS resources
       Used to provide users access to external resources (e.g. MS Office) and also internal (apps on corporate network, company cloud apps).
       MFA - can set up MFA to control access to resources
       Use AzAD to automate user provisioning between existing Windows AD users and your cloud apps
       Provides tools to protect user identities and creds to fall in line with companies governance requirements)
       Integration-ready with Teams among all other MS products
       Already 500k 3rd party apps integrated into AzAD
       In AzAD, can control:
          Users, Groups, Organisations, Roles
          also Apps, Domains, Devices ...
       Microsoft Graph:
          Rest API to AzAD, Office365 services, Security/Mobility services, Windows 10 services (e.g. Activities/Devices)
          Can use Graph to control every aspect of a user/team/group. Onboarding can be easily automated.
       Can assign access rights at user or group level. 
       A group con consist of other groups
       Roles can be assigned to users :
          - e.g. can make a user an administrator by assigning admin role (global admin/limited admin)
       Licenses can be added for a user :
          - Only users with active licenses will be able to access & use licensed AD services.

GCP
----
   Cloud IAM
       Provides tools to manage resource permissions and map job functions to groups and roles.
       Users only get access to what they need to get the job done
       Give users one-click access to apps - assign users access from any location/any device to SaaS apps
       Provides a simple interface for all GCP services
       High-Granularity, e.g. can create an access-control policy to grant the subscriber role to a single user for a given pub.sub topic
          - CLAIMS: Here we can control who can pub or sub for a given work queue
       Context aware access - retrieve useful context info (e.g device, IP, date) to further control access to resources
          - CLAIMS: Might be useful for shift-based teams, breaks etc to manage who can take work from a queue
       Flexible roles : e.g. a single Cloud Pub/Sub service exposes: Owner/Editor/Viewer/Publisher/Subscriber roles
       Configured via GCP console, IAM methods and gcloud tool
       Supports standard google accounts
       Create IAM policies (granting permission) for Google group, google hosted domain, service account, specific google accounts.
       Centrally manage users/groups via Cloud Identity Admin Console

       AD integration : Federation GCP with AD (https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction)
     

Work Distribution
------------------

GCP
---
    Cloud Tasks
        Fully managed service allowing mgmt of the dispatch, delivery & execution of distributed tasks. 
        Can perform work asynchronously outside of a user (or service2service) request.
    Cloud Pub/Sub
        Global messaging and event ingestion
        Can Pull/Push subscriptions 
        End2End encryption available
        Fully automated scaling/provisioning
        Cross-zone replication provides data durability and HA
        API and native interface 
        TBD

AWS
---
    Kinesis Data Streams - 
        Enables processing of big data in real time. 
        Allows handling of high volumes of streaming data 


    SQS/SQS FIFO - 
        Fully managed message queue service
        Can send/store & receive messages between components at any volume
        2 queue types:
           Standard - offer maximum thruput, at-least-once delivery, best-effort ordering
           FIFO - exactly-once processing, exact-order (sent) processing
        Scales elastically
        Secure comms


Azure
------
    Azure Service Bus -
        Messages/Message Triggers/Topics/Subscriptions/Functions
        Debug via CLI
        Secure comms




Policy Cache

GCP
---
   Cloud MemoryStore
       Fully managed in-memory data store service built on scalable secure/HA infrastructure
       sub-milisecond data access
       Redis compatible
       

AWS
---
   Elasticache
       Fully managed Redis/Memcached
       

Azure
-----
   Azure Cache for Redis
       Fully managed Redis server
       Performant
       Reliable
       Scalable
       Secure


