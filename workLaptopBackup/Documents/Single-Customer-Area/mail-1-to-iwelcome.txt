----------------------


Hosted Login 

For our current customer portal, we have created our own login screen that collects user credentials. 

We then invoke an iWelcome REST endpoint to validate the user credentials. If successful, iWelcome will then return an Access Token along with an ID token.

We can then make further calls to the User info endpoint as well as token management via revocation and introspection patterns.


However, our current portal does not have support for MFA, Social login and Magic Links.


Given the way I've described our current portal architecture:

   Q1. Is there a way we could continue to host the login page *and* take advantage of iWelcome's MFA/Social/MagicLink functionality ?


If the answer to Q1 is yes, and we chose to continue with this architecture, then:

   Q2. Would we also be able to take advantage of *all* the other features using iWelcome APIs e.g. rolling GDPR updates ?

   Q3. How much extra work will we be placing on ourselves to maintain this approach ?


Depending on the answers above, is the following assumption correct:


   A1. iWelcome would recommend we should migrate to an iWelcome hosted login page to seamlessly benefit from these key features.




Authentication Proxy

We are investigating an architecture where we would introduce a new component that would serve as :
   - reverse Proxy/ingres/API gateway and
   - central authentication point.

In this model, we'd authenticate a user through standard Open ID Connect (OIDC) flows (i.e. Authorization code) and iWelcome.

This new component would also:
   - Manage the validity of OAuth/OIDC tokens, ensuring our protected resources are only accessed when valid tokens are presented
   - Refresh/Revoke tokens as required
   - Pass Identity claims to downstream protected resources.

There are a number of advantages to adopting this pattern:
   - Handling OIDC flows/tokens can be centralised and kept away from our applications/APIs
   - Centralizing authentication allows all interactions with our iWelcome to be contained to a single component.
   - Securing Client secrets/tokens can be restricted to a central point.

There are a number of products already providing this type of functionality, e.g.
   - Apache HTTPd with mod_auth_openidc
   - NGINX with the lua-resty-openidc plugin
   - NGINX Plus
   - Ambassador
   - Kong


Given the above,

   Q4. Have iWelcome got experience of integrating with any products in this space e.g. NGINX, Kong ?
         - if yes, then please provide further details, giving examples where possible

   Q5. Do iWelcome have any customers who have adopted this approach and if so, what did they use ?

   Q6. Is there any documentation iWelcome could share describing integrations with any of the products mentioned above ?



Many thanks for any feedback you can provide to this mail.


regards,
Andy Grahame






-------------------
